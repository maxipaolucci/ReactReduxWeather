Parameters:
  AppName:
    Description: ElasticBeanstalk application name
    Type: String
    Default: flo2cash_exercise
  RepoName:
    Description: Github repository name
    Type: String
    Default: maxipaolucci/ReactReduxWeather
  RepoBranch:
    Description: Github repository branch name
    Type: String
    Default: master
  RepoConnectionArn: 
    Description: Github repository codestar connection arn
    Type: String
    Default: arn:aws:codestar-connections:ap-southeast-2:782522910439:connection/961ebc85-18ee-4e81-94b6-ba246702ee28
  CodePipelineS3Bucket:
    Description: S3 bucket to store CodePipeline Resources
    Type: String
    Default: codepipeline-ap-southeast-2-215851890597
  ECSClusterName:
    Description: ECS Fargate cluster name
    Type: String
    Default: flo2cash-cluster-fargate
  ECSServiceName:
    Description: ECS Service name
    Type: String
    Default: flo2cash-service-fargate

Conditions: 
  # The app is deployable if we are building the master branch
  IsDeployable: !Equals [ !Ref RepoBranch, master ]

Resources:
  CodePipelineRolesStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: https://maxipaolucci.s3-ap-southeast-2.amazonaws.com/cloudformation-stacks/codepipeline-roles.yml
      Parameters:
        AppName: !Ref AppName
        RepoBranch: !Ref RepoBranch
        CodePipelineS3Bucket: !Ref CodePipelineS3Bucket
              
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Join ['-', [ !Ref AppName, !Ref RepoBranch ] ]
      Description: !Sub 'Build project for ${RepoBranch} branch'
      ServiceRole: !GetAtt CodePipelineRolesStack.Outputs.CodeBuildRoleArn
      Artifacts:
        EncryptionDisabled: false
        Location: !Ref CodePipelineS3Bucket
        Name: !Ref AppName
        NamespaceType: NONE
        Packaging: ZIP
        Path: !Join
          - '/'
          - [ !Join ['-', [ 'cicd', !Ref AppName, !Ref RepoBranch ] ], codeBuildArtifacts ]
        Type: S3
      BadgeEnabled: false
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:3.0
        PrivilegedMode: true
      Source:
        Type: S3
        Location: !Join
          - '/'
          - [ !Ref CodePipelineS3Bucket, !Join ['-', [ 'cicd', !Ref AppName, !Ref RepoBranch ] ], SourceArti ]
      TimeoutInMinutes: 60
      QueuedTimeoutInMinutes: 480

  cicdPipeline:
    Type: AWS::CodePipeline::Pipeline
    DependsOn: 
      - CodeBuildProject
    Properties: 
      ArtifactStore:
        Location: !Ref CodePipelineS3Bucket
        Type: S3      
      Name: !Join ['-', [ 'cicd', !Ref AppName, !Ref RepoBranch ] ]
      RoleArn: !GetAtt CodePipelineRolesStack.Outputs.CodePipelineRoleArn
      Stages: 
        - Name: Source 
          Actions: 
            - Name: Source
              ActionTypeId: 
                Category: Source 
                Owner: AWS 
                Version: 1 
                Provider: CodeStarSourceConnection 
              OutputArtifacts: 
                - Name: SourceArtifact
              Namespace: SourceVariables
              Configuration:
                ConnectionArn: !Ref RepoConnectionArn
                FullRepositoryId: !Ref RepoName
                BranchName: !Ref RepoBranch
                OutputArtifactFormat: CODE_ZIP
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              RunOrder: 1
              Region: ap-southeast-2
              Namespace: BuildVariables
              Configuration:
                BatchEnabled: 'false'
                ProjectName: !Join ['-', [ !Ref AppName, !Ref RepoBranch ] ]
                EnvironmentVariables: '[{"name":"CURRENT_BRANCH","value":"#{SourceVariables.BranchName}","type":"PLAINTEXT"}]'
              OutputArtifacts:
                - Name: BuildArtifact
              InputArtifacts:
                - Name: SourceArtifact
        - !If 
          - IsDeployable
          - Name: Deploy
            Actions:
              - Name: Deploy
                ActionTypeId:
                  Category: Deploy
                  Owner: AWS
                  Provider: ECS
                  Version: '1'
                RunOrder: 1
                Region: ap-southeast-2
                Namespace: DeployVariables
                Configuration:
                  ClusterName: !Ref ECSClusterName
                  ServiceName: !Ref ECSServiceName
                  FileName: imagedefinitions.json
                  DeploymentTimeout: '15'
                InputArtifacts:
                  - Name: BuildArtifact
          - !Ref AWS::NoValue
      Tags:
        - Key: REPO_BRANCH
          Value: !Ref RepoBranch
      